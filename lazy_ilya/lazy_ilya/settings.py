"""
Django my_settings for lazy_ilya project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of my_settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path

from django.urls import reverse_lazy

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development my_settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-f)sqft2b+v-rn(9%g76ii2yp(nr)er4@sm@9u(lrvq0vp5q6*#"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "daphne",
    "django.contrib.staticfiles",
    # "work_for_ilia.apps.WorkForIliaConfig",
    "file_creator.apps.FileCreatorConfig",
    "myauth.apps.MyauthConfig",
    "channels",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "lazy_ilya.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "lazy_ilya", "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "lazy_ilya.wsgi.application"

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
    # {"NAME": "work_for_ilia.validators.CustomPasswordValidator"}
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "ru"

TIME_ZONE = "Europe/Moscow"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = os.path.join(
    BASE_DIR, "staticfiles"
)  # Сюда импортируются все файлы статики для всех приложений
STATICFILES_DIRS = [os.path.join(BASE_DIR, "lazy_ilya", "static")]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

# Установка по умолчанию для автоматически создаваемых полей в моделях Django.
# BigAutoField — это целочисленный идентификатор, который автоматически увеличивается.
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# URL для перенаправления неавторизованных пользователей при попытке доступа к защищенным страницам.
# Замените на ваш URL для страницы входа, если он отличается.
# LOGIN_URL = reverse_lazy("work_for_ilia:login")

# URL для перенаправления пользователей после успешного входа.
# LOGIN_REDIRECT_URL = reverse_lazy("work_for_ilia:index")

# Указание приложения ASGI для проекта Django.
# ASGI (Asynchronous Server Gateway Interface) — это интерфейс для асинхронных веб-приложений.
ASGI_APPLICATION = "lazy_ilya.asgi.application"

# Настройка слоев каналов для приложения Channels.
# Channels — это расширение Django для работы с веб-сокетами и другими асинхронными протоколами.
CHANNEL_LAYERS = {
    "default": {
        # Используем слой каналов в памяти для разработки.
        # Это не подходит для продакшена, так как данные будут потеряны при перезапуске сервера.
        "BACKEND": "channels.layers.InMemoryChannelLayer",
    },
}

SESSION_EXPIRE_AT_BROWSER_CLOSE = True
SESSION_COOKIE_AGE = 30 * 60  # Время жизни сессии в секундах (например, 30 минут)
SESSION_SAVE_EVERY_REQUEST = True  # Обновляет таймер сессии при каждом запросе
AUTH_USER_MODEL = 'myauth.CustomUser'
