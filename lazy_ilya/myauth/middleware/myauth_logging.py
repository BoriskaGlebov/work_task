import json
from django.http import HttpResponse
from django.contrib.auth.views import LoginView
from lazy_ilya.utils.settings_for_app import logger
from typing import Callable


class UserActionLoggingMiddleware:
    """
    Middleware –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –≤–∫–ª—é—á–∞—è –ø–æ–ø—ã—Ç–∫–∏ –≤—Ö–æ–¥–∞, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è
    –∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è. –õ–æ–≥–∏—Ä—É–µ—Ç —É—Å–ø–µ—à–Ω—ã–µ –∏ –Ω–µ—É—Å–ø–µ—à–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    –æ —Å—Ç–∞—Ç—É—Å–∞—Ö –æ—Ç–≤–µ—Ç–∞ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç–µ –æ—à–∏–±–æ–∫.

    –ê—Ç—Ä–∏–±—É—Ç—ã:
        get_response (Callable): –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∑–∞–ø—Ä–æ—Å.
    """

    def __init__(self, get_response: Callable):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è middleware.

        Args:
            get_response (Callable): –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∑–∞–ø—Ä–æ—Å.
        """
        self.get_response = get_response

    def __call__(self, request) -> HttpResponse:
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å, –ª–æ–≥–∏—Ä—É–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–µ—Ä–µ–¥–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –¥–∞–ª—å—à–µ.

        –õ–æ–≥–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö
        –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–ø—ã—Ç–∫–∏ –≤—Ö–æ–¥–∞, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è.

        Args:
            request: –û–±—ä–µ–∫—Ç –∑–∞–ø—Ä–æ—Å–∞.

        Returns:
            HttpResponse: –û—Ç–≤–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å –ø–æ—Å–ª–µ –µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏.
        """
        user = request.user
        path = request.path
        method = request.method
        ip = request.META.get('REMOTE_ADDR')

        if 'registration' in path.lower() and method == 'GET':
            logger.info(f"–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ä–º—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ –∞–¥—Ä–µ—Å—É {path} from IP {ip}")
        elif 'reset-password' in path.lower() and method == 'GET':
            logger.info(f"–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ä–º—ã —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ –∞–¥—Ä–µ—Å—É {path} from IP {ip}")
        elif 'login' in path.lower() and method == 'GET':
            logger.info(f"–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ä–º—ã –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ –∞–¥—Ä–µ—Å—É {path} from IP {ip}")

        try:
            # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
            response = self.get_response(request)
        except Exception as e:
            # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞
            logger.exception(f"‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞ {method} {path} —Å IP {ip}: {str(e)}")
            raise

        # –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—ã–µ –∏ –Ω–µ—É—Å–ø–µ—à–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
        if 'registration' in path.lower() and method == 'POST':
            logger.info(f"üîê –ê–Ω–æ–Ω–∏–º–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ {path} —Å IP {ip} (–°—Ç–∞—Ç—É—Å: {response.status_code})")
            self.custom_message(response, user, method, path, ip)
        elif 'reset-password' in path.lower() and method == 'POST':
            logger.info(f"üîê –ê–Ω–æ–Ω–∏–º–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è —á–µ—Ä–µ–∑ {path} —Å IP {ip} (–°—Ç–∞—Ç—É—Å: {response.status_code})")
            self.custom_message(response, user, method, path, ip)
        elif 'login' in path.lower() and method == 'POST':
            logger.info(f"üîê –ê–Ω–æ–Ω–∏–º–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ {path} —Å IP {ip} (–°—Ç–∞—Ç—É—Å: {response.status_code})")
            self.custom_message(response, user, method, path, ip)

        return response

    def custom_message(self, response: HttpResponse, user, method: str, path: str, ip: str) -> None:
        """
        –õ–æ–≥–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–∞—Ö –∏–ª–∏ —É—Å–ø–µ—à–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–∞—Ö —Å –¥–µ—Ç–∞–ª—è–º–∏ –æ—Ç–≤–µ—Ç–∞.

        –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É (—Å—Ç–∞—Ç—É—Å >= 400), –ª–æ–≥–∏—Ä—É–µ—Ç—Å—è —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞, –µ—Å–ª–∏ –æ–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–æ.

        Args:
            response (HttpResponse): –û—Ç–≤–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å.
            user: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —Å–¥–µ–ª–∞–≤—à–∏–π –∑–∞–ø—Ä–æ—Å.
            method (str): –ú–µ—Ç–æ–¥ HTTP-–∑–∞–ø—Ä–æ—Å–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'GET', 'POST').
            path (str): –ü—É—Ç—å, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –±—ã–ª —Å–¥–µ–ª–∞–Ω –∑–∞–ø—Ä–æ—Å.
            ip (str): IP-–∞–¥—Ä–µ—Å –∫–ª–∏–µ–Ω—Ç–∞, —Å–¥–µ–ª–∞–≤—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å.
        """
        if response.status_code >= 400:
            # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
            content_type = response.get('Content-Type', '')
            body = ''
            if 'application/json' in content_type:
                try:
                    body = json.loads(response.content.decode())
                except Exception:
                    body = response.content.decode(errors='ignore')
            elif 'text' in content_type:
                body = response.content.decode(errors='ignore')

            # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –æ—Ç–≤–µ—Ç–æ–º
            logger.warning(
                f"‚ö†Ô∏è {user} –ø–æ–ª—É—á–∏–ª –æ—à–∏–±–∫—É {response.status_code} –Ω–∞ {method} {path} —Å IP {ip}. "
                f"–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {body}"
            )
        elif response.status_code == 200:
            # –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—ã–π –∑–∞–ø—Ä–æ—Å
            logger.info(
                f"‚ö†Ô∏è {user} –ø–æ–ª—É—á–∏–ª —É—Å–ø–µ—à–Ω—ã–π —Å—Ç–∞—Ç—É—Å {response.status_code} –Ω–∞ {method} {path} —Å IP {ip}."
            )
